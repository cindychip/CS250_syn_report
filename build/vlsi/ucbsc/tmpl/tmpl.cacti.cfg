##
## UC Berkeley Memory Compiler v081610a
## Rimas Avizienis, Yunsup Lee, and Kyle Wecker
##
## Cheetah template for the cacti configuration
##
## Cache size
-size (bytes) $C

## Line size
-block size (bytes) $B

## To model Fully Associative cache, set associativity to zero
-associativity $A

-read-write port $RWP
-exclusive read port $ERP
-exclusive write port $EWP
-single ended read ports $NSER

## Multiple banks connected using a bus
-UCA bank count $NBANKS
-technology (u) ${TECH/1000.0}

## following three parameters are meaningful only for main memories

-page size (bits) $PAGE_SIZE
-burst length $BURST_LENGTH
-internal prefetch width $PRE_WIDTH

## Bus width include data bits and address bits required by the decoder
-output/input bus width $OUTPUT_WIDTH

## to model special structure like branch target buffers, directory, etc. 
## change the tag size parameter
## if you want cacti to calculate the tagbits, set the tag size to "default"
#if not $SPECIFIC_TAG
-tag size (b) "default"
#else
-tag size (b) $TAG_WIDTH
#end if

## fast - data and tag access happen in parallel
## sequential - data array is accessed after accessing the tag array
## normal - data array lookup and tag access happen in parallel
##          final data block is broadcasted in data array h-tree 
##          after getting the signal from the tag array
#if $ACCESS_MODE == 0
-access mode (normal, sequential, fast) - "normal"
#else if $ACCESS_MODE == 1
-access mode (normal, sequential, fast) - "sequential"
#else if $ACCESS_MODE == 2
-access mode (normal, sequential, fast) - "fast"
#else
ERROR: wrong access mode flag ($ACCESS_MODE)
#end if

## Type of memory - cache (with a tag array) or ram (scratch ram similar to a register file) 
## or main memory (no tag array and every access will happen at a page granularity Ref: CACTI 5.3 report)
#if $CACHE
-cache type "cache"
#else if $MAIN_MEM
-cache type "main memory"
#else
-cache type "ram"
#end if

## DESIGN OBJECTIVE for UCA (or banks in NUCA)
-design objective (weight delay, dynamic power, leakage power, cycle time, area) $OBJ_FUNC_DELAY:$OBJ_FUNC_DYN_POWER:$OBJ_FUNC_LEAK_POWER:$OBJ_FUNC_CYCLE_TIME:$OBJ_FUNC_AREA

## Percentage deviation from the minimum value 
## Ex: A deviation value of 10:1000:1000:1000:1000 will try to find an organization
## that compromises at most 10% delay. 
## NOTE: Try reasonable values for % deviation. Inconsistent deviation
## percentage values will not produce any valid organizations. For example,
## 0:0:100:100:100 will try to identify an organization that has both
## least delay and dynamic power. Since such an organization is not possible, CACTI will
## throw an error. Refer CACTI-6 Technical report for more details
-deviate (delay, dynamic power, leakage power, cycle time, area) $DEV_FUNC_DELAY:$DEV_FUNC_DYN_POWER:$DEV_FUNC_LEAK_POWER:$DEV_FUNC_CYCLE_TIME:$DEV_FUNC_AREA

## Set optimize tag to ED or ED^2 to obtain a cache configuration optimized for
## energy-delay or energy-delay sq. product
## Note: Optimize tag will disable weight or deviate values mentioned above
## Set it to NONE to let weight and deviate values determine the 
## appropriate cache configuration
#if $ED_ED2_NONE == 0
-Optimize ED or ED^2 (ED, ED^2, NONE): "NONE"
#else if $ED_ED2_NONE == 1
-Optimize ED or ED^2 (ED, ED^2, NONE): "ED"
#else if $ED_ED2_NONE == 2
-Optimize ED or ED^2 (ED, ED^2, NONE): "ED^2"
#else
ERROR: wrong optimize ED or ED^2 flag ($ED_ED2_NONE)
#end if

## 300-400 in steps of 10
-operating temperature (K) $TEMPERATURE

## By default CACTI considers both full-swing and low-swing 
## wires to find an optimal configuration. However, it is possible to 
## restrict the search space by changing the signalling from "default" to 
## "fullswing" or "lowswing" type.
#if $WT == 0
-Wire signalling (fullswing, lowswing, default) - "default"
#else if $WT == 1
-Wire signalling (fullswing, lowswing, default) - "Global"
#else if $WT == 2
-Wire signalling (fullswing, lowswing, default) - "Global_5"
#else if $WT == 3
-Wire signalling (fullswing, lowswing, default) - "Global_10"
#else if $WT == 4
-Wire signalling (fullswing, lowswing, default) - "Global_20"
#else if $WT == 5
-Wire signalling (fullswing, lowswing, default) - "Global_30"
#else if $WT == 6
-Wire signalling (fullswing, lowswing, default) - "lowswing"
#else
ERROR: wrong wire signalling flag ($WT)
#end if

## following parameter can have one of five values -- (itrs-hp, itrs-lstp, itrs-lop, lp-dram, comm-dram)
#if $DATA_ARRAY_RAM_CELL_TECH == 0
-Data array cell type - "itrs-hp"
#else if $DATA_ARRAY_RAM_CELL_TECH == 1
-Data array cell type - "itrs-lstp"
#else if $DATA_ARRAY_RAM_CELL_TECH == 2
-Data array cell type - "itrs-lop"
#else if $DATA_ARRAY_RAM_CELL_TECH == 3
-Data array cell type - "lp-dram"
#else if $DATA_ARRAY_RAM_CELL_TECH == 4
-Data array cell type - "comm-dram"
#else
ERROR: wrong data array cell type flag ($DATA_ARRAY_RAM_CELL_TECH)
#end if

## following parameter can have one of three values -- (itrs-hp, itrs-lstp, itrs-lop)
#if $DATA_ARRAY_PERI_TECH == 0
-Data array peripheral type - "itrs-hp"
#else if $DATA_ARRAY_PERI_TECH == 1
-Data array peripheral type - "itrs-lstp"
#else if $DATA_ARRAY_PERI_TECH == 2
-Data array peripheral type - "itrs-lop"
#else
ERROR: wrong data array peripheral type flag ($DATA_ARRAY_PERI_TECH)
#end if

## following parameter can have one of five values -- (itrs-hp, itrs-lstp, itrs-lop, lp-dram, comm-dram)
#if $TAG_ARRAY_RAM_CELL_TECH == 0
-Tag array cell type - "itrs-hp"
#else if $TAG_ARRAY_RAM_CELL_TECH == 1
-Tag array cell type - "itrs-lstp"
#else if $TAG_ARRAY_RAM_CELL_TECH == 2
-Tag array cell type - "itrs-lop"
#else if $TAG_ARRAY_RAM_CELL_TECH == 3
-Tag array cell type - "lp-dram"
#else if $TAG_ARRAY_RAM_CELL_TECH == 4
-Tag array cell type - "comm-dram"
#else
ERROR: wrong tag array cell type flag ($TAG_ARRAY_RAM_CELL_TECH)
#end if

## following parameter can have one of three values -- (itrs-hp, itrs-lstp, itrs-lop)
#if $TAG_ARRAY_PERI_TECH == 0
-Tag array peripheral type - "itrs-hp"
#else if $TAG_ARRAY_PERI_TECH == 1
-Tag array peripheral type - "itrs-lstp"
#else if $TAG_ARRAY_PERI_TECH == 2
-Tag array peripheral type - "itrs-lop"
#else
ERROR: wrong tag array peripheral type flag ($TAG_ARRAY_PERI_TECH)
#end if

#if $INTERCONNECT_PROJECTION_TYPE == 0
-Interconnect projection - "aggressive"
#else
-Interconnect projection - "conservative"
#end if

#if $WIRE_TYPE_INSIDE_MAT == 2
-Wire inside mat - "global"
#else if $WIRE_TYPE_INSIDE_MAT == 0
-Wire inside mat - "local"
#else
-Wire inside mat - "default"
#end if

#if $WIRE_TYPE_OUTSIDE_MAT == 2
-Wire outside mat - "global"
#else
-Wire outside mat - "default"
#end if

## NOTE: for nuca network frequency is set to a default value of 
## 5GHz in time.c. CACTI automatically
## calculates the maximum possible frequency and downgrades this value if necessary

#if $IS_NUCA == 0
-Cache model (NUCA, UCA)  - "UCA"
#else
-Cache model (NUCA, UCA)  - "NUCA"
#end if

## Contention in network (which is a function of core count and cache level) is one of
## the critical factor used for deciding the optimal bank count value
## core count can be 4, 8, or 16
-Core count $CORE_COUNT

#if $CACHE_LEVEL == 0
-Cache level (L2/L3) - "L2"
#else
-Cache level (L2/L3) - "L3"
#end if

## In order for CACTI to find the optimal NUCA bank value the following
## variable should be assigned 0.
-NUCA bank count $NUCA_BANK_COUNT

## Objective for NUCA
-NUCAdesign objective (weight delay, dynamic power, leakage power, cycle time, area) $NUCA_OBJ_FUNC_DELAY:$NUCA_OBJ_FUNC_DYN_POWER:$NUCA_OBJ_FUNC_LEAK_POWER:$NUCA_OBJ_FUNC_CYCLE_TIME:$NUCA_OBJ_FUNC_AREA
-NUCAdeviate (delay, dynamic power, leakage power, cycle time, area) $NUCA_DEV_FUNC_DELAY:$NUCA_DEV_FUNC_DYN_POWER:$NUCA_DEV_FUNC_LEAK_POWER:$NUCA_DEV_FUNC_CYCLE_TIME:$NUCA_DEV_FUNC_AREA

## Default vaules for the knobs which are not exposed to the command line
-Add ECC - "true"
-Print level (DETAILED, CONCISE) - "DETAILED"
-Print input parameters - "true"
-Force cache config - "false"
##-Force cache config - "true"
##-Ndwl 64
##-Ndbl 64
##-Nspd 64
##-Ndcm 1
##-Ndsam1 4
##-Ndsam2 1
